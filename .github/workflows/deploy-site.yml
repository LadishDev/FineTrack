name: Deploy Vite site to GitHub Pages

on:
  push:
    branches:
      - main
    paths:
      - 'src/version.ts'   # Only trigger if version file changes
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deploy even if version exists'
        required: false
        default: 'false'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Read version
        id: version
        run: |
          VERSION=$(grep -oP '(?<=VERSION = ")[0-9.]+' src/version.ts)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Version detected: $VERSION"

      - name: Check if version already deployed
        id: check
        run: |
          FORCE=${{ github.event.inputs.force_deploy || 'false' }}
          SHOULD_DEPLOY=true
          if [ "$FORCE" != "true" ]; then
            if git ls-remote --exit-code origin gh-pages &> /dev/null; then
              git fetch origin gh-pages:gh-pages
              if git show gh-pages:version.txt | grep -q "$VERSION"; then
                echo "This version ($VERSION) is already deployed. Skipping deploy."
                SHOULD_DEPLOY=false
              fi
            fi
          else
            echo "Force deploy enabled, building and deploying anyway."
          fi
          echo "should_deploy=$SHOULD_DEPLOY" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        if: steps.check.outputs.should_deploy == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install dependencies
        if: steps.check.outputs.should_deploy == 'true'
        run: npm ci

      - name: Build project for GitHub Pages
        if: steps.check.outputs.should_deploy == 'true'
        run: |
          echo "Building for GitHub Pages"
          DEPLOY_ENV=github npx vite build


      - name: Save version marker
        if: steps.check.outputs.should_deploy == 'true'
        run: echo "$VERSION" > dist/version.txt

      - name: Deploy to GitHub Pages
        if: steps.check.outputs.should_deploy == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist